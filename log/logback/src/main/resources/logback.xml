<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="false">


    <!-- 配置集中管理属性 定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径-->
    <property name="LOG_HOME" value="/home"/>
    <property name="pattern" value="[%-5level]%d{yyyy-MM-dd HH:mm:ss.SSS} %c %M %L [%thread] %m%n"></property>
    <property name="log_dir" value="/logs"></property>
    <!--
      日志输出格式
      %-5level
      %d{yyyy-MM-dd HH:mm:ss.SSS}
      %c 类的完整名称
      %M 为method
      %L 为行号
      %thread 线程名称
      %m或者%msg为信息
      %n 换行

    -->

    <!--控制台日志， 控制台输出 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <!-- 控制输出流对象 默认System.out 改为System.err -->
        <target>System.out</target>
        <!-- 日志消息格式配置-->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度,%msg：日志消息，%n是换行符-->
            <pattern>[%-5p] %d{yyyy-MM-dd HH:mm:ss.SSS} %c %M: %m%n</pattern>
        </encoder>
    </appender>

    <!--文件日志， 按照每天生成日志文件 -->
    <!--    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
    <!--        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
    <!--            &lt;!&ndash;日志文件输出的文件名&ndash;&gt;-->
    <!--            <FileNamePattern>${LOG_HOME}/TestWeb.log.%d{yyyy-MM-dd}.log</FileNamePattern>-->
    <!--            &lt;!&ndash;日志文件保留天数&ndash;&gt;-->
    <!--            <MaxHistory>30</MaxHistory>-->
    <!--        </rollingPolicy>-->
    <!--        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">-->
    <!--            &lt;!&ndash;格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符&ndash;&gt;-->
    <!--            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>-->
    <!--        </encoder>-->
    <!--        &lt;!&ndash;日志文件最大的大小&ndash;&gt;-->
    <!--        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">-->
    <!--            <MaxFileSize>10MB</MaxFileSize>-->
    <!--        </triggeringPolicy>-->
    <!--    </appender>-->
    <!--日志文件输出的appender-->
<!--    <appender name="file" class="ch.qos.logback.core.FileAppender">-->
<!--        &lt;!&ndash;日志文件保存路径&ndash;&gt;-->
<!--        <file>${log_dir}/logback.log</file>-->
<!--        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">-->
<!--            <pattern>${pattern}</pattern>-->

<!--        </encoder>-->
<!--    </appender>-->

    <!-- show parameters for hibernate sql 专为 Hibernate 定制 -->
<!--    <logger name="org.hibernate.type.descriptor.sql.BasicBinder" level="TRACE"/>-->
<!--    <logger name="org.hibernate.type.descriptor.sql.BasicExtractor" level="DEBUG"/>-->
<!--    <logger name="org.hibernate.SQL" level="DEBUG"/>-->
<!--    <logger name="org.hibernate.engine.QueryParameters" level="DEBUG"/>-->
<!--    <logger name="org.hibernate.engine.query.HQLQueryPlan" level="DEBUG"/>-->

<!--    &lt;!&ndash;myibatis log configure&ndash;&gt;-->
<!--    <logger name="com.apache.ibatis" level="TRACE"/>-->
<!--    <logger name="java.sql.Connection" level="DEBUG"/>-->
<!--    <logger name="java.sql.Statement" level="DEBUG"/>-->
<!--    <logger name="java.sql.PreparedStatement" level="DEBUG"/>-->

    <!-- 日志输出级别 root logger 配置-->
    <root level="debug">
        <appender-ref ref="STDOUT"/>
<!--        <appender-ref ref="file"/>-->
    </root>
</configuration>